## Enable Subcharts
artifactory-ha:
  enabled: true
xray:
  enabled: true
distribution:
  enabled: false
mission-control:
  enabled: false
pipelines:
  enabled: false

## All values are under the 'artifactory-ha' sub chart.
artifactory-ha:

  ## Artifactory
  ## See full list of supported Artifactory options and documentation in artifactory chart: https://github.com/jfrog/charts/tree/master/stable/artifactory
  artifactory:
    masterKey: FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    joinKey: EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
    ## Default version is from the artifactory sub-chart in the requirements.yaml
    image:
      #repository: partnership-jfrog-artifactory.jfrog.io/artifactory-pro-rh
      repository: docker.bintray.io/jfrog/artifactory-pro
      # version:
    node:
      replicaCount: 1
  ## PostgreSQL
  ## See list of supported postgresql options and documentation in artifactory chart: https://github.com/jfrog/charts/tree/master/stable/artifactory
  ## Configuration values for the PostgreSQL dependency sub-chart
  ## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
  postgresql:
    enabled: true
  # Disable ssl offload if needed
  nginx:
    service:
      ssloffload: true

## All values are under the 'xray' sub chart.
xray:
  replicaCount: 1
  xray:
    masterKey: FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    joinKey: EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
    consoleLog: false
    jfrogUrl:
  # sleep the xray to let artifactory come up first
  common:
    customInitContainers: |
      - name: "rt-services-wait-setup"
        image: "{{ .Values.initContainerImage }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        command:
          - 'sh'
          - '-c'
          - 'sleep 450;'
        volumeMounts:
          - mountPath: "{{ .Values.xray.persistence.mountPath }}"
            name: data-volume
  postgresql:
    nameOverride: xray-postgres
    enabled: true
    image:
      registry: docker.bintray.io
      repository: bitnami/postgresql
      tag: 9.6.17-debian-10-r21
    postgresqlUsername: xray
    postgresqlPassword: ""
    postgresqlDatabase: xraydb
    postgresqlExtendedConf:
      listenAddresses: "'*'"
      maxConnections: "500"
    service:
      port: 5432
    persistence:
      enabled: true
      size: 50Gi
      existingClaim:
    resources: {}
    #  requests:
    #    memory: "1Gi"
    #    cpu: "250m"
    #  limits:
    #    memory: "2Gi"
    #    cpu: "1"
    nodeSelector: {}
    affinity: {}
    tolerations: []

  database:
    url: "postgres://{{ .Release.Name }}-xray-postgres:5432/xraydb?sslmode=disable"
    user: xray
    secrets:
      password:
        name: "{{ .Release.Name }}-xray-postgres"
        key: postgresql-password

  # RabbitMQ HA
  ## Configuration values for the rabbitmq-ha dependency
  ## ref: https://github.com/kubernetes/charts/blob/master/stable/rabbitmq-ha/README.md
  ##
  rabbitmq-ha:
    enabled: true
    replicaCount: 1
    image:
      tag: 3.7.21-alpine
    rabbitmqUsername: guest
    rabbitmqPassword: ""
    persistentVolume:
      enabled: true
      size: 20Gi
    rbac:
      create: true

    ## Custom command to run before Xray startup. Runs BEFORE any microservice-specific preStartCommand
    preStartCommand:

  global:
    # Kubernetes secret with Postgres TLS certificates
    postgresqlTlsSecret:

  analysis:
    name: xray-analysis
    ## Note that by default we use appVersion to get image tag/version
    image:
      #repository: partnership-jfrog-artifactory.jfrog.io/xray-analysis-rh
      repository: docker.bintray.io/jfrog/xray-analysis
      # version:
    updateStrategy: RollingUpdate
    podManagementPolicy: Parallel

    ## Custom command to run before Xray Analysis startup. Runs AFTER the common.preStartCommand
    preStartCommand:

  indexer:
    name: xray-indexer
    ## Note that by default we use appVersion to get image tag/version
    image:
      #repository: partnership-jfrog-artifactory.jfrog.io/xray-indexer-rh
      repository: docker.bintray.io/jfrog/xray-indexer
      # version:
    updateStrategy: RollingUpdate
    podManagementPolicy: Parallel

  persist:
    name: xray-persist
    ## Note that by default we use appVersion to get image tag/version
    image:
      #repository: partnership-jfrog-artifactory.jfrog.io/xray-persist-rh
      repository: docker.bintray.io/jfrog/xray-persist
      # version:
    updateStrategy: RollingUpdate
    podManagementPolicy: Parallel

    ## Container storage limit
    persistence:
      size: 10Gi

    ## Custom command to run before Xray Persist startup. Runs AFTER the common.preStartCommand
    preStartCommand:

  server:
    name: xray-server
    ## Note that by default we use appVersion to get image tag/version
    image:
      #repository: partnership-jfrog-artifactory.jfrog.io/xray-server-rh
      repository: docker.bintray.io/jfrog/xray-server
      # version:
    updateStrategy: RollingUpdate
    podManagementPolicy: Parallel
    replicaCount: 1

  router:
    name: router
    image:
      repository: docker.bintray.io/jfrog/router
      #repository: partnership-jfrog-artifactory.jfrog.io/xray-router-rh
      version: 1.2.1
      imagePullPolicy: IfNotPresent